version: "3.8"

services:

  cards-front:
    image: front:1.0
    ports:
      - '3000:80'

  gateway:
    image: gateway:0.0.1-SNAPSHOT
    ports:
      - '8000:8000'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - micro_card

  recorder:
    image: recorder:0.0.1-SNAPSHOT
    ports:
      - '8082'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - micro_card

  resolver:
    image: resolver:0.0.1-SNAPSHOT
    ports:
      - '8085:8085'
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - consul-importer
    volumes:
      - ./logs:/resolver/logs
    networks:
      - micro_card

  ongoing:
    image: ongoing:0.0.1-SNAPSHOT
    ports:
      - '8081:8081'
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - consul-importer
      - rabbitmq-dev
    networks:
      - micro_card

  rabbitmq-dev:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - micro_card

  consul-dev:
    image: hashicorp/consul:1.19.2
    container_name: consul
    ports:
      - '8500:8500'
    command: 'agent -dev -node=cards -client=0.0.0.0 -log-level=INFO'
    networks:
      - micro_card

  consul-importer:
    image: consul-importer:1.19.2
    depends_on:
      - consul-dev
    networks:
      - micro_card

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - micro_card

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - micro_card

  fluentd:
    image: fluentd
    container_name: fluentd
    volumes:
      - ./fluentd:/fluentd/fluent.conf
      - ./logs:/resolver/logs
    ports:
      - "24224:24224"
    depends_on:
      - elasticsearch
    networks:
      - micro_card

networks:
  micro_card:
    driver: bridge

volumes:
  esdata:
    driver: local